<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
  <edmx:Reference Uri="https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml">
    <edmx:Include Alias="Core" Namespace="Org.OData.Core.V1" />
  </edmx:Reference>
  <edmx:Reference Uri="https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Aggregation.V1.xml">
    <edmx:Include Alias="Aggregation" Namespace="Org.OData.Aggregation.V1" />
  </edmx:Reference>
  <edmx:Reference Uri="https://sap.github.io/odata-vocabularies/vocabularies/Common.xml">
    <edmx:Include Namespace="com.sap.vocabularies.Common.v1" Alias="Common" />
  </edmx:Reference>

  <edmx:DataServices>
    <Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="com.sap.vocabularies.Hierarchy.v1" Alias="Hierarchy">
      <Annotation Term="Core.Description">
        <String>Terms for Hierarchies</String>
      </Annotation>
      <Annotation Term="Core.Description" Qualifier="Published">
        <String>2018-01-31 Â© Copyright 2018 SAP SE. All rights reserved</String>
      </Annotation>
      <Annotation Term="Core.Links">
        <Collection>
          <Record>
            <PropertyValue Property="rel" String="latest-version" />
            <PropertyValue Property="href" String="https://sap.github.io/odata-vocabularies/vocabularies/Hierarchy.xml" />
          </Record>
          <Record>
            <PropertyValue Property="rel" String="alternate" />
            <PropertyValue Property="href" String="https://sap.github.io/odata-vocabularies/vocabularies/Hierarchy.json" />
          </Record>
          <Record>
            <PropertyValue Property="rel" String="describedby" />
            <PropertyValue Property="href" String="https://github.com/sap/odata-vocabularies/blob/main/vocabularies/Hierarchy.md" />
          </Record>
        </Collection>
      </Annotation>

      <Term Name="RecursiveHierarchy" Type="Hierarchy.RecursiveHierarchyType" BaseTerm="Aggregation.RecursiveHierarchy" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Common.Experimental" />
        <Annotation Term="Core.Description" String="Defines a recursive hierarchy" />
        <Annotation Term="Core.LongDescription">
          <String>The [base term](https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Aggregation.V1.html#RecursiveHierarchy)
          governs what are the nodes and parents in the hierarchy, whereas this annotation designates properties that contain derived information.</String>
        </Annotation>
      </Term>
      <ComplexType Name="RecursiveHierarchyType">
        <Annotation Term="Common.Experimental" />
        <Annotation Term="Core.LongDescription">
          <String>The nullable property paths in this complex type refer to properties of an entity type that contain
          information about a node in a recursive hierarchy. When a resource of the annotated entity type is requested
          and hierarchy-related transformations (`ancestors`, `descendants`, `traverse`) are applied to it
          with the resource as first parameter and the annotation qualifier as second parameter,
          these properties are derived for each node, that is, for each instance in the resulting collection.
          They are not affected by subsequent transformations or query options (like `$filter` or `$top`).</String>
        </Annotation>
        <Property Name="ExternalKeyProperty" Type="Edm.PropertyPath" Nullable="false">
          <Annotation Term="Core.Description" String="Property holding the external key value for a node" />
        </Property>
        <Property Name="NodeTypeProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Property holding the type of a node" />
          <Annotation Term="Core.LongDescription">
            <String>In a recursive hierarchy with mixed types, nodes of different type can have different properties
            and be represented by entities of different subtypes of a commmon entity type.
            The common entity type is the target of the `RecursiveHierarchy` annotation.</String>
          </Annotation>
        </Property>
        <Property Name="DescendantCountProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Integer property of type `Edm.Int64` holding the number of descendants of a node" />
        </Property>
        <Property Name="DrillStateProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Property holding the drill state of a node" />
          <Annotation Term="Core.LongDescription">
            <String>Possible drill states are:
            `expanded` if a node's children are included in the output set;
            `collapsed` if a node's children are not included in the output set;
            `leaf` if a node has no children in the requested resource.</String>
          </Annotation>
        </Property>
        <Property Name="SiblingRankProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Integer property of type `Edm.Int64` holding the sibling rank of a node" />
          <Annotation Term="Core.LongDescription" String="The sibling rank of a node is the index of the node in the sequence of all nodes with the same parent. The first sibling has rank 0." />
        </Property>
        <Property Name="PreorderRankProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Integer property of type `Edm.Int64` holding the preorder rank of a node" />
          <Annotation Term="Core.LongDescription" String="The preorder rank of a node expresses its position in the sequence of nodes created from preorder traversal. The first node in preorder traversal has rank 0." />
        </Property>
        <Property Name="IsLeafProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Boolean property indicating whether a node has no children in the requested resource" />
        </Property>
        <Property Name="DistanceFromRootProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Integer property of type `Edm.Int64` holding the number of edges between the node and the root node" />
        </Property>
        <Property Name="LevelProperty" Type="Edm.PropertyPath" Nullable="true">
          <Annotation Term="Core.Description" String="Integer property of type `Edm.Int64` holding a node's level, which increases when descending the hierarchy" />
        </Property>
      </ComplexType>

    </Schema>
  </edmx:DataServices>
</edmx:Edmx>
